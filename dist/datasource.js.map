{"version":3,"sources":["../src/datasource.js"],"names":["_","String","prototype","splice","start","delCount","newSubStr","slice","Math","abs","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","name","tushareproToken","jsonData","tusharepro_token","apiUrl","tusharepro_api","q","t","Promise","resolve","setTimeout","options","retryInterval","datasourceRequest","url","method","headers","data","api","code","end","then","resp","status","fieldIndex","fields","indexOf","field","ts","items","datapoints","map","parseFloat","tup","Date","getTime","reverse","obj","target","catch","console","log","err","errors","message","quandl_error","reject","that","range","from","toISOString","substring","replace","to","targets","filter","hide","proms","getTimeSeries","all","response","title","option","ret","mapToTextValue","text","value","result","d","i","isObject"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\n\nif (!String.prototype.splice) {\n  /**\n   * {JSDoc}\n   *\n   * The splice() method changes the content of a string by removing a range of\n   * characters and/or adding new characters.\n   *\n   * @this {String}\n   * @param {number} start Index at which to start changing the string.\n   * @param {number} delCount An integer indicating the number of old chars to remove.\n   * @param {string} newSubStr The String that is spliced in.\n   * @return {string} A new string with the spliced substring.\n   */\n  String.prototype.splice = function (start, delCount, newSubStr) {\n    return this.slice(0, start) + newSubStr + this.slice(start + Math.abs(delCount));\n  };\n}\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.name = instanceSettings.name;\n    this.tushareproToken = instanceSettings.jsonData.tusharepro_token;\n    this.apiUrl = instanceSettings.jsonData.tusharepro_api;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n  }\n\n  delay(t) {\n    return new Promise(function (resolve) {\n      setTimeout(resolve, t)\n    });\n  }\n\n  getTimeSeries(options, retryInterval) {\n    return this.backendSrv.datasourceRequest({\n      url: this.apiUrl,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET,POST,PUT,DELETE,OPTIONS',\n        'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept'\n      },\n      data: {\n        \"api_name\": options.api,\n        \"token\": this.tushareproToken,\n        \"params\": {\n          \"ts_code\": options.code,\n          \"start_date\": options.start,\n          \"end_date\": options.end\n        }\n      }\n    }).then(resp => {\n      if (resp.status === 200 && resp.data.code == 0) {\n        var fieldIndex = resp.data.data.fields.indexOf(options.field);\n        var ts = resp.data.data.items;\n\n        var datapoints = _.map(ts, tup => {\n          return [parseFloat(tup[fieldIndex]), new Date(tup[1].splice(6, 0, \"-\").splice(4, 0, \"-\")).getTime()]\n        }).reverse();\n\n\n        var obj = {\n          target: options.code,\n          datapoints: datapoints\n        };\n\n        return obj;\n      }\n      return null;\n    }).catch(err => {\n      console.log(err)\n      if (err.status == 404 || retryInterval > 5000) {\n        var errors = {\n          message: \"Error getting time series\"\n        }\n        if (err.data && err.data.quandl_error) {\n          errors = {\n            message: err.data.quandl_error.message\n          };\n        }\n        else if (retryInterval > 10000) {\n          var errors = {\n            message: \"Request timed out\"\n          }\n        }\n        return this.q.reject(errors);\n      }\n\n      var that = this;\n      /*\n      return this.delay(retryInterval).then(function () {\n        return that.getTimeSeries(options, retryInterval * 2);\n      })\n      */\n    });\n  }\n\n  query(options) {\n    var start = options.range.from.toISOString().substring(0, 10).replace('-', '');\n    var end = options.range.to.toISOString().substring(0, 10).replace('-', '');\n\n\n    options.targets = options.targets.filter(t => !t.hide);\n\n    var proms = _.map(options.targets, target => {\n      return this.getTimeSeries({api: target.api, code: target.code, field: target.field, start: start, end: end}, 2000);\n    });\n    return Promise.all(proms)\n      .then(data => {\n        return {data: data}\n      })\n  }\n\n  testDatasource() {\n    console.log(\"test123\")\n    return this.backendSrv.datasourceRequest({\n      url: this.apiUrl,\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET,POST,PUT,DELETE,OPTIONS',\n        'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept'\n      },\n      data: {\n        \"api_name\": \"stock_basic\",\n        \"token\": this.tushareproToken,\n        \"params\": {\n          \"list_status\": \"P\"\n        }\n      }\n    }).then(response => {\n      if (response.status === 200 && response.data.code == 0) {\n        return {status: \"success\", message: \"测试成功\", title: \"Success\"};\n      }\n    });\n  }\n\n  metricFindQuery(options) {\n    return new Promise(option => {\n      if (option.api == \"\") {\n      }\n      var ret = this.mapToTextValue([\n        {text: '开盘价', value: 2},\n        {text: '收盘价', value: 5}\n      ]);\n      return ret;\n    });\n  }\n\n  mapToTextValue(result) {\n    return _.map(result, (d, i) => {\n      if (d && d.text && d.value) {\n        return {text: d.text, value: d.value};\n      } else if (_.isObject(d)) {\n        return {text: d, value: i};\n      }\n      return {text: d, value: d};\n    });\n  }\n}\n"]}