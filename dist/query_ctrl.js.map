{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","GenericDatasourceQueryCtrl","$scope","$injector","uiSegmentSrv","scope","console","log","target","code","field","api","split","onChangeInternal","c","charAt","datasource","metricFindQuery","then","transformToSegments","Promise","all","rawQuery","panelCtrl","refresh","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,e,kBAAAA,S;;;;;;;;;;;;;;;;;;;;;4CAGKC,0B;;;AAEX,4CAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,YAA/B,EAA6C;AAAA;;AAAA,8JACrCF,MADqC,EAC7BC,SAD6B;;AAG3C,gBAAKE,KAAL,GAAaH,MAAb;AACA,gBAAKE,YAAL,GAAoBA,YAApB;AACAE,kBAAQC,GAAR,CAAY,MAAKC,MAAjB;AACA,gBAAKA,MAAL,CAAYC,IAAZ,GAAmB,MAAKD,MAAL,CAAYC,IAAZ,IAAoB,WAAvC;AACA,gBAAKD,MAAL,CAAYE,KAAZ,GAAoB,MAAKF,MAAL,CAAYE,KAAZ,IAAqB,OAAzC;AACA,gBAAKF,MAAL,CAAYA,MAAZ,GAAqB,MAAKA,MAAL,CAAYA,MAAZ,IAAsB,iBAA3C;AACA,gBAAKA,MAAL,CAAYG,GAAZ,GAAkB,MAAKH,MAAL,CAAYA,MAAZ,CAAmBI,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,KAAoC,OAAtD;AACA,gBAAKC,gBAAL;AAV2C;AAW5C;;;;+BAEIC,C,EAAG;AACN;AACA,gBAAIA,EAAEC,MAAF,CAAS,CAAT,KAAe,GAAnB,EAAwB;AACtB,qBAAOD,IAAI,KAAX;AACD,aAFD,MAEO;AACL,qBAAOA,IAAI,KAAX;AACD;AACF;;;uCAEY;AACX,mBAAO,KAAKE,UAAL,CAAgBC,eAAhB,CAAgC,KAAKT,MAArC,EACJU,IADI,CACC,KAAKd,YAAL,CAAkBe,mBAAlB,CAAsC,KAAtC,CADD,CAAP;AAEA;AACD;;;2CAEgB;AACf,mBAAOC,QAAQC,GAAR,CAAY,EAAZ,CAAP;AACD;;;4CAEiB;AAChB,mBAAO,KAAKL,UAAL,CAAgBC,eAAhB,CAAgC,KAAKT,MAArC,EACJU,IADI,CACC,KAAKd,YAAL,CAAkBe,mBAAlB,CAAsC,KAAtC,CADD,CAAP;AAED;;;6CAEkB;AACjB,iBAAKX,MAAL,CAAYc,QAAZ,GAAuB,CAAC,KAAKd,MAAL,CAAYc,QAApC;AACD;;;6CAEkB;AACjB,iBAAKd,MAAL,CAAYA,MAAZ,GAAqB,KAAKA,MAAL,CAAYG,GAAZ,GAAkB,GAAlB,GAAwB,KAAKH,MAAL,CAAYC,IAAzD;AACA,iBAAKc,SAAL,CAAeC,OAAf,GAFiB,CAES;AAC3B;;;;QA9C6CxB,S;;;;AAiDhDC,iCAA2BwB,WAA3B,GAAyC,4BAAzC","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, uiSegmentSrv) {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.uiSegmentSrv = uiSegmentSrv;\n    console.log(this.target);\n    this.target.code = this.target.code || '000001.SZ';\n    this.target.field = this.target.field || 'close';\n    this.target.target = this.target.target || 'daily/000001.SZ';\n    this.target.api = this.target.target.split('/')[0] || 'daily';\n    this.onChangeInternal();\n  }\n\n  code(c) {\n    //翻译code\n    if (c.charAt(0) == '6') {\n      return c + '.SH'\n    } else {\n      return c + '.SZ'\n    }\n  }\n\n  getOptions() {\n    return this.datasource.metricFindQuery(this.target)\n      .then(this.uiSegmentSrv.transformToSegments(false));\n    // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n  }\n\n  getCodeOptions() {\n    return Promise.all([])\n  }\n\n  getFieldOptions() {\n    return this.datasource.metricFindQuery(this.target)\n      .then(this.uiSegmentSrv.transformToSegments(false));\n  }\n\n  toggleEditorMode() {\n    this.target.rawQuery = !this.target.rawQuery;\n  }\n\n  onChangeInternal() {\n    this.target.target = this.target.api + '/' + this.target.code;\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n}\n\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}